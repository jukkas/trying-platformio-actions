name: PlatformIO CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Run PlatformIO
      env:
        MY_TEST_SECRET: "${{ secrets.MY_TEST_SECRET }}"
        FIRMWARE_VERSION: "v1"
      run: |
        echo "The GitHub Action Secret will be masked:  "
        echo ${{ secrets.MY_TEST_SECRET }}
        echo "Trick to echo GitHub Actions Secret:  "
        echo ${{secrets.MY_TEST_SECRET}} | sed 's/./& /g'
        pio run
    - uses: actions/upload-artifact@v3
      with:
        name: my-firmware
        path: |
          .pio/build/esp32dev/firmware.bin
          .pio/build/esp32dev/partitions.bin

  release:
    name: Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download the build output
        uses: actions/download-artifact@v2
        with:
          name: my-firmware
      - name: Upload to my own Webdav server
        run: -
          pwd
          ls -la
          curl --user '${{secrets.WEBDAV_USER}}:${{secrets.WEBDAV_PASSWORD}}' -T firmware.bin ${{secrets.WEBDAV_URL}}/demo-firmware.bin
